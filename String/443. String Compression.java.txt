/*
Example 1:

Input: chars = ["a","a","b","b","c","c","c"]
Output: Return 6, and the first 6 characters of the input array should be: ["a","2","b","2","c","3"]
Explanation: The groups are "aa", "bb", and "ccc". This compresses to "a2b2c3".
Example 2:

Input: chars = ["a"]
Output: Return 1, and the first character of the input array should be: ["a"]
Explanation: The only group is "a", which remains uncompressed since it's a single character.
Example 3:

Input: chars = ["a","b","b","b","b","b","b","b","b","b","b","b","b"]
Output: Return 4, and the first 4 characters of the input array should be: ["a","b","1","2"].
Explanation: The groups are "a" and "bbbbbbbbbbbb". This compresses to "ab12".
Example 4:

Input: chars = ["a","a","a","b","b","a","a"]
Output: Return 6, and the first 6 characters of the input array should be: ["a","3","b","2","a","2"].
Explanation: The groups are "aaa", "bb", and "aa". This compresses to "a3b2a2". Note that each group is independent even if two groups have the same character.

*/

class Solution {
   public int compress(char[] chars) {
        StringBuilder sb=new StringBuilder();
        int count=1;
        int n=chars.length;
        if (n==1)
            return n;
     for(int i=0;i<chars.length-1;i++){
         if(chars[i]==chars[i+1]){
             count++;
         }else{
             sb.append(chars[i]);
             if(count!=1)
             sb.append(count);
             count=1;
         }
         if(i+1==chars.length-1){
             if(chars[i]!=chars[n-1]){
                 sb.append(chars[n-1]);
             }else{
                 sb.append(chars[i]);
                 sb.append(count);
             }
         }
        
     }
    
          for (int i = 0; i < sb.length(); i++) {
            chars[i] = sb.charAt(i);
        }
        return sb.length();
     
    }
}